---
import HomeVodsLoading from './HomeVodsLoading.astro'
import VodCard from './VodCard.astro'
---

<div id="vod-list" class="grid w-full gap-6 max-w-[1600px] grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
  <template id="vod-template">
    <VodCard />
  </template>
  <template id="loading-template">
    <HomeVodsLoading />
  </template>
</div>

<script>
  import type { Vod } from '@lib/types'
  import { getLangFromUrl, relativeLink } from '@lib/i18n/utils'
  import InfiniteScroll from '@lib/infiniteScroll'
  import formatTimeAgo from '@lib/utils/formatTimeAgo'
  const formatter = new Intl.RelativeTimeFormat(getLangFromUrl({ ...location }), { numeric: 'auto' })

  document.addEventListener('DOMContentLoaded', () => {
    new InfiniteScroll<Vod, { cursor?: string }>({
      box: 'vod-list',
      templateBox: 'vod-template',
      fetchItems(_page, lres, setRes, finish) {
        return new Promise(async (resolve) => {
          const res = await fetch(`https://api.zvods.com/api/v1/vods?results=12&cursor=${lres?.cursor || ''}`)
          const { data } = (await res.json()) as { data: { vods: Vod[]; cursor?: string } }
          if (data.vods.length === 0) return resolve([])
          if (data?.cursor) {
            setRes({ cursor: data.cursor })
          } else {
            data.vods.length > 0 && finish()
          }
          return resolve(data.vods)
        })
      },
      loadingPlaceholder: 'loading-template',
      loadingPlaceholderCount: 12,
      itemConfigurator(item, element) {
        element.querySelectorAll('.vod-link').forEach((el) => ((el as HTMLAnchorElement).href = relativeLink(`/watch/${item.vodId}`, window.location)))
        ;(element.querySelector('.vod-title') as HTMLElement).textContent = item.title
        ;(element.querySelector('.vod-date') as HTMLElement).textContent = formatTimeAgo(item.date, formatter) || ''
        ;(element.querySelector('.vod-thumbnail') as HTMLImageElement).src = `https://i.ytimg.com/vi_webp/${item.vodId.split(',')[0]}/hqdefault.webp`
        const vodChannel = element.querySelector('.vod-channel') as HTMLAnchorElement
        vodChannel.textContent = item.channel
        element.querySelectorAll('.vod-channel-link').forEach((el) => ((el as HTMLAnchorElement).href = relativeLink(`/${item.channel}`, window.location)))
      },
    })
  })
</script>

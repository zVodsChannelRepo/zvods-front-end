---
import Chat from '@components/vod/Chat.astro'
import Player from '@components/vod/Player.astro'
import VodNotFound from '@components/vod/VodNotFound.astro'
import Layout from '@layouts/Layout.astro'
export const prerender = false

const { vid } = Astro.params

if (!vid) {
  return Astro.redirect(`/${Astro.currentLocale}`)
}
console.log(`https://zvods.com/api/vod/${vid}`)
const res = await fetch(`https://zvods.com/api/vod/${vid}`).catch(() => {})
const data = await res?.json?.()
const formatter = new Intl.DateTimeFormat(Astro.currentLocale)
const date = formatter.format(new Date(data?.vod?.date || Date.now()))
const vodExists = res?.status == 200 && data?.code == 'success'
const title = vodExists ? `${data?.vod?.title} ${date}` : 'Vod não encontrado'
const description = vodExists ? `Acesse a transmissão do dia ${date} de ${data?.vod?.channel} e assista o conteúdo completo com o chat da live!` : 'VOD não encontrado'
---

<Layout title={title} description={description} videoId={vodExists ? vid : undefined}>
  {
    !vodExists ? (
      <VodNotFound />
    ) : (
      <vod-content class=" bg-slate-800 ">
        <div class="group-[.theater]:h-screen flex flex-1 gap-1 h-[90vh]">
          <Player />
          <Chat />
        </div>
        <vod-section>
          <span>mais coisas aqui</span>
        </vod-section>
      </vod-content>
    )
  }
</Layout>

<script>
  import { toggleTheater } from '@lib/vodUtils'

  document.body.classList.add('group')
  ;(document.querySelector('header') as HTMLElement).classList.add('group-[.theater]:hidden')
  ;(document.querySelector('vod-section') as HTMLElement).classList.add('group-[.theater]:hidden')

  document.addEventListener('keyup', (event) => {
    if (event.altKey) {
      switch (event.code) {
        case 'KeyT':
          toggleTheater()
          break
      }
      return
    }
  })
</script>
